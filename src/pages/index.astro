---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import About from '../components/About.astro';
import Experience from '../components/Experience.astro';
import Education from '../components/Education.astro';
import Projects from '../components/Projects.astro';
import NavBar from '../components/NavBar.astro';
import ChevronIcon from '../icons/ChevronIcon.astro';
import Wrapper from '../components/Wrapper.tsx';
import { header, experience, projects, education } from '../content/content.ts'

---

<Layout>
  <div class="flex h-dvh flex-col">
    <NavBar />
    <Wrapper client:load />
    <a class="fade-in-bounce h-10 flex flex-col justify-end items-center text-gray-500 text-sm font-bold hover:text-gray-400 dark:hover:text-white md:mb-0" 
      href="#About"
      id="Explore">
      Explore Portfolio
      <ChevronIcon className='h-6 w-6 dark:text-white'/>
    </a>
  </div>
  
  <div class="flex gap-22 px-10 md:px-22 justify-evenly w-full">
    <Header header={header}/>
    <main class="flex flex-col gap-24 md:max-w-[600px] md:w-[60%]">
      <About />
      <Experience experience={experience}/>
      <Projects projects={projects}/>
      <Education education={education}/>
    </main>
  </div>
  
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const colorBgBody = (xPos:number, yPos:number) => {
      if (document.documentElement.classList.contains('dark')) {
        return `radial-gradient(circle at ${xPos}px ${yPos}px, rgba(0,30,30,1) 0%, #101616 300px)`;
      }
      else {
        return `radial-gradient(circle at ${xPos}px ${yPos}px, rgb(184, 255, 255) 0%, rgba(255, 255, 255, 1) 80px)`;
      }
    }
    
    const explore = document.querySelector('#Explore');
    const body = document.querySelector('body');
    window.addEventListener('scroll', () => {
      const scrollY = window.scrollY;

      if (scrollY > 20) {
        explore?.classList.remove('fade-in-bounce');
        explore?.classList.add('fade-out-bt');
      }
      if (scrollY === 0) {
        explore?.classList.remove('fade-out-bt');
        explore?.classList.add('fade-in-bounce');
      }

      if (body) {
        const lastMouseEvent = body.dataset.lastMouseEvent; // Store the last mouse event
        if (lastMouseEvent) {
          const e = JSON.parse(lastMouseEvent);
          const yPos = e.clientY + window.scrollY;
          body.style.background = colorBgBody(e.clientX, yPos);
        }
      }
    });
    
    document.addEventListener('mousemove', (e) => {
      console.log(window.scrollY);
      if (body) {
        body.style.background = colorBgBody(e.clientX, e.clientY+window.scrollY);
      }
    });
    document.addEventListener('mousemove', (e) => {
      if (body) {
        body.dataset.lastMouseEvent = JSON.stringify({ clientX: e.clientX, clientY: e.clientY });
      }
    });
  });
</script>