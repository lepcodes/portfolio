---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import About from '../components/About.astro';
import Experience from '../components/Experience.astro';
import Education from '../components/Education.astro';
import Projects from '../components/Projects.astro';
import NavBar from '../components/NavBar.astro';
import ChevronIcon from '../icons/ChevronIcon.astro';
import Wrapper from '../components/Wrapper.tsx';
import { header, experience, projects, education } from '../content/content.ts'

---

<Layout>
  <div class="flex h-dvh flex-col justify-center items-center">
    <NavBar />
    <Wrapper client:load />
    <a class="hoverable fade-in-bounce h-10 w-fit px-8 flex flex-col justify-end items-center text-gray-500 text-sm font-bold hover:text-[#000] dark:hover:text-white md:mb-0" 
      href="#About"
      id="Explore">
      Explore Portfolio
      <ChevronIcon className='h-6 w-6 dark:text-white'/>
    </a>
  </div>
  
  <div class="flex gap-22 px-10 md:px-22 justify-evenly w-screen">
    <Header header={header}/>
    <main class="flex flex-col gap-24 w-full md:max-w-[600px] md:w-[60%]">
      <About />
      <Experience experience={experience}/>
      <Projects projects={projects}/>
      <Education education={education}/>
    </main>
  </div>
  
  <div class="cursor">
    <div class="cursor__ball cursor__ball--big ">
      <svg height="30" width="30">
        <circle cx="15" cy="15" r="12" stroke-width="0"></circle>
      </svg>
    </div>
    
    <div class="cursor__ball cursor__ball--small">
      <svg height="10" width="10">
        <circle cx="5" cy="5" r="4" stroke-width="0"></circle>
      </svg>
    </div>
  </div>
</Layout>

<script>
  import gsap from 'gsap';

  document.addEventListener('DOMContentLoaded', () => {
    
    const explore = document.querySelector('#Explore');
    const body = document.querySelector('body');
    window.addEventListener('scroll', () => {
      const scrollY = window.scrollY;

      if (scrollY > 20) {
        explore?.classList.remove('fade-in-bounce');
        explore?.classList.add('fade-out-bt');
      }
      if (scrollY === 0) {
        explore?.classList.remove('fade-out-bt');
        explore?.classList.add('fade-in-bounce');
      }
    });

    if (window.matchMedia('(min-width: 768px)').matches) {
      const bigBall = document.querySelector('.cursor__ball--big');
      const smallBall = document.querySelector('.cursor__ball--small');

      const hoverables = document.querySelectorAll('.hoverable');
      hoverables.forEach((hoverable) => {
        hoverable.addEventListener('mouseenter', onMouseHover);
        hoverable.addEventListener('mouseleave', onMouseHoverOut);
      });
      function onMouseHover(this: HTMLElement) {
        this.style.cursor = 'pointer';
        smallBall?.classList.add('hidden');
        gsap.to(bigBall, {duration: 0.3, scale: 4})
      }
      function onMouseHoverOut(this: HTMLElement) {
        this.style.cursor = 'none';
        smallBall?.classList.remove('hidden');
        gsap.to(bigBall, {duration: 0.3,scale: 1})
      }
      document.addEventListener('mousemove', (e) => {
        gsap.to(bigBall, {
          opacity: 1,
          duration: 0.4,
          x: e.clientX-15,
          y: e.clientY-15,
        });
        gsap.to(smallBall, {
          opacity: 1,
          duration: 0.1,
          x: e.clientX-5,
          y: e.clientY-5,
        });
      });
    }
  });
</script>