---
import XIcon from "../icons/XIcon.astro";
import DownloadIcon from "../icons/DownloadIcon.astro";
import { Image } from "astro:assets";
import ProfilePicture from "../../src/assets/ProfilePicture.webp";
import CopyToClipboard from "./CopyToClipboard";

const contacts = [
  {
    name: "LinkedIn",
    url: "https://www.linkedin.com/in/luispreciado",
    clipboard: "https://www.linkedin.com/in/luispreciado"
  },
  {
    name: "GitHub",
    url: "https://github.com/lepcodes",
    clipboard: "https://github.com/lepcodes"
  },
  {
    name: "Mail",
    url: "mailto:luispre99@gmail.com",
    clipboard: "luispre99@gmail.com"
  },
  {
    name: "Phone",
    url: "https://wa.link/ou9afg",
    clipboard: "+52 33 1793 3872"
  }
];
---
<div>
  <button id="pop-over-toggle" class="h-10 w-10 flex items-center justify-center hover:scale-120 transition-all duration-200">
    <div id="profile-picture" class="m-0 border overflow-hidden pulse dark:border-white border-gray-700 rounded-full hover:cursor-pointer hover:border-teal-700 ">
      <Image src={ProfilePicture} alt="Picture" class="object-cover hover:scale-107 transition-all duration-200"/>
    </div>
    <div id="close-button" class="hidden rounded-full overflow-hidden">
      <XIcon class="h-8 w-8 weight-bold  md:text-teal-600 md:dark:text-teal-600 hover:cursor-pointer dark:hover:text-gray-200 hover:text-gray-600"/>
    </div>
  </button>

  <div id="pop-over" class="hidden flex-col absolute top-full left-0 md:top-[90%] md:left-10 h-screen md:h-fit items-center gap-4 border border-gray-400 dark:border-gray-700 shadow-lg dark:shadow-black md:rounded-lg py-4 px-8 bg-white dark:bg-teal-950 md:dark:bg-[#18262aad] overflow-hidden animate-pop-over-out-mobile md:animate-pop-over-out-desktop">  
    <div class="flex flex-col items-center gap-2 m-2 mt-4 ">
      <Image src={ProfilePicture} alt="Picture" width="128" height=128 class="object-cover rounded-full self-center border-2"/>
      <h1 class="text-xl font-extrabold dark:text-gray-200 mt-1">Luis Preciado</h1>
      <p class="text-sm dark:text-gray-400">AI and Robotics Engineer</p>
    </div>
    <div class="flex flex-col md:grid md:grid-cols-2 gap-y-5 gap-x-3 text-sm w-fit">
      {contacts.map((contact) => (
        <CopyToClipboard contact={contact} client:load/>
      ))}
    </div>
    <button 
    onclick="window.open('../../src/assets/Resume.pdf', '_blank')"
    class="flex items-center self-center border border-gray-700 rounded-lg w-fit px-2 py-1 text-sm bg-white font-bold text-black mt-2 hover:cursor-pointer hover:text-teal-600 transition-all duration-100 mb-4 pulse-glow hover:scale-105 hover:shadow-lg shadow-sm dark:shadow-black group">
      <span>Resume</span><DownloadIcon class="h-4 w-4 ml-1 dark:group-hover:text-teal-600 dark:text-black"/>
    </button>
  </div>
</div>

<!-- <script>
  const popOverToggle = document.getElementById('pop-over-toggle');
  const profilePicture = document.getElementById('profile-picture');
  const closeButton = document.getElementById('close-button');
  const popOver = document.getElementById('pop-over');

  popOverToggle?.addEventListener('click', () => {
    popOver?.classList.remove('hidden');
    popOver?.classList.add('flex');
    popOver?.classList.toggle('md:animate-pop-over-in-desktop');
    popOver?.classList.toggle('md:animate-pop-over-out-desktop');
    popOver?.classList.toggle('animate-pop-over-in-mobile');
    popOver?.classList.toggle('animate-pop-over-out-mobile');
    profilePicture?.classList.toggle('pulse');
    profilePicture?.classList.toggle('hidden');
    closeButton?.classList.toggle('hidden');
  });
</script> -->
<script>
  const popOverToggle = document.getElementById('pop-over-toggle');
  const profilePicture = document.getElementById('profile-picture');
  const closeButton = document.getElementById('close-button');
  const popOver = document.getElementById('pop-over');

  function openPopOver() {
    popOver?.classList.remove('hidden');
    popOver?.classList.add('flex');
    popOver?.classList.remove('md:animate-pop-over-out-desktop', 'animate-pop-over-out-mobile');
    popOver?.classList.add('md:animate-pop-over-in-desktop', 'animate-pop-over-in-mobile');
    profilePicture?.classList.remove('pulse');
    profilePicture?.classList.add('hidden');
    closeButton?.classList.remove('hidden');
  }

  function closePopOver() {
    if (popOver?.classList.contains('hidden')) return; // Already closing or hidden

    popOver?.classList.remove('md:animate-pop-over-in-desktop', 'animate-pop-over-in-mobile');
    popOver?.classList.add('md:animate-pop-over-out-desktop', 'animate-pop-over-out-mobile');

    // Define a function to handle hiding after animation
    const handleAnimationEnd = () => {
      popOver?.classList.remove('flex');
      popOver?.classList.add('hidden');
      // Clean up the event listener to prevent it from firing multiple times
      popOver?.removeEventListener('animationend', handleAnimationEnd);
    };

    // Listen for the end of the animation
    popOver?.addEventListener('animationend', handleAnimationEnd);

    profilePicture?.classList.add('pulse');
    profilePicture?.classList.remove('hidden');
    closeButton?.classList.add('hidden');
  }

  popOverToggle?.addEventListener('click', (event) => {
    event.stopPropagation(); // Prevents the click from immediately closing the pop-over
    if (popOver?.classList.contains('hidden')) {
      openPopOver();
    } else {
      closePopOver();
    }
  });

  // Listen for clicks on the whole document
  document.addEventListener('click', (event) => {
    // Check if the popOver is visible and the click was outside the popOver and not on the toggle button
    if (
      !popOver?.classList.contains('hidden') &&
      !popOver?.contains(event.target as Node) &&
      !popOverToggle?.contains(event.target as Node)
    ) {
      closePopOver();
    }
  });
</script>